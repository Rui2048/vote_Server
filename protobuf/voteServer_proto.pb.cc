// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voteServer_proto.proto

#include "voteServer_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_voteServer_5fproto_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voteServer_5fproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateVote_Judge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voteServer_5fproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAllVotesResponse_Vote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voteServer_5fproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetVoteResultByOneJudgeResponse_Vote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voteServer_5fproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VoteResponse_Plaerscore;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voteServer_5fproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vote_Plaer_score;
}  // namespace protobuf_voteServer_5fproto_2eproto
namespace protoMsg {
class CreateVote_JudgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateVote_Judge>
      _instance;
} _CreateVote_Judge_default_instance_;
class CreateVoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateVote>
      _instance;
} _CreateVote_default_instance_;
class CreateVoteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateVoteResponse>
      _instance;
} _CreateVoteResponse_default_instance_;
class GetAllVotesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAllVotes>
      _instance;
} _GetAllVotes_default_instance_;
class GetAllVotesResponse_VoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAllVotesResponse_Vote>
      _instance;
} _GetAllVotesResponse_Vote_default_instance_;
class GetAllVotesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAllVotesResponse>
      _instance;
} _GetAllVotesResponse_default_instance_;
class GetVoteResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVoteResult>
      _instance;
} _GetVoteResult_default_instance_;
class GetVoteResultByOneJudgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVoteResultByOneJudge>
      _instance;
} _GetVoteResultByOneJudge_default_instance_;
class GetVoteResultByOneJudgeResponse_VoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVoteResultByOneJudgeResponse_Vote>
      _instance;
} _GetVoteResultByOneJudgeResponse_Vote_default_instance_;
class GetVoteResultByOneJudgeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVoteResultByOneJudgeResponse>
      _instance;
} _GetVoteResultByOneJudgeResponse_default_instance_;
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest>
      _instance;
} _LoginRequest_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse>
      _instance;
} _LoginResponse_default_instance_;
class Vote_Plaer_scoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vote_Plaer_score>
      _instance;
} _Vote_Plaer_score_default_instance_;
class VoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vote>
      _instance;
} _Vote_default_instance_;
class VoteResponse_PlaerscoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoteResponse_Plaerscore>
      _instance;
} _VoteResponse_Plaerscore_default_instance_;
class VoteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoteResponse>
      _instance;
} _VoteResponse_default_instance_;
}  // namespace protoMsg
namespace protobuf_voteServer_5fproto_2eproto {
static void InitDefaultsCreateVote_Judge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_CreateVote_Judge_default_instance_;
    new (ptr) ::protoMsg::CreateVote_Judge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::CreateVote_Judge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateVote_Judge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateVote_Judge}, {}};

static void InitDefaultsCreateVote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_CreateVote_default_instance_;
    new (ptr) ::protoMsg::CreateVote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::CreateVote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateVote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateVote}, {
      &protobuf_voteServer_5fproto_2eproto::scc_info_CreateVote_Judge.base,}};

static void InitDefaultsCreateVoteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_CreateVoteResponse_default_instance_;
    new (ptr) ::protoMsg::CreateVoteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::CreateVoteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateVoteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateVoteResponse}, {}};

static void InitDefaultsGetAllVotes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_GetAllVotes_default_instance_;
    new (ptr) ::protoMsg::GetAllVotes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::GetAllVotes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAllVotes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAllVotes}, {}};

static void InitDefaultsGetAllVotesResponse_Vote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_GetAllVotesResponse_Vote_default_instance_;
    new (ptr) ::protoMsg::GetAllVotesResponse_Vote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::GetAllVotesResponse_Vote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAllVotesResponse_Vote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAllVotesResponse_Vote}, {}};

static void InitDefaultsGetAllVotesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_GetAllVotesResponse_default_instance_;
    new (ptr) ::protoMsg::GetAllVotesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::GetAllVotesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetAllVotesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetAllVotesResponse}, {
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetAllVotesResponse_Vote.base,}};

static void InitDefaultsGetVoteResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_GetVoteResult_default_instance_;
    new (ptr) ::protoMsg::GetVoteResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::GetVoteResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVoteResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVoteResult}, {}};

static void InitDefaultsGetVoteResultByOneJudge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_GetVoteResultByOneJudge_default_instance_;
    new (ptr) ::protoMsg::GetVoteResultByOneJudge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::GetVoteResultByOneJudge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVoteResultByOneJudge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVoteResultByOneJudge}, {}};

static void InitDefaultsGetVoteResultByOneJudgeResponse_Vote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_GetVoteResultByOneJudgeResponse_Vote_default_instance_;
    new (ptr) ::protoMsg::GetVoteResultByOneJudgeResponse_Vote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::GetVoteResultByOneJudgeResponse_Vote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVoteResultByOneJudgeResponse_Vote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVoteResultByOneJudgeResponse_Vote}, {}};

static void InitDefaultsGetVoteResultByOneJudgeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_GetVoteResultByOneJudgeResponse_default_instance_;
    new (ptr) ::protoMsg::GetVoteResultByOneJudgeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::GetVoteResultByOneJudgeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetVoteResultByOneJudgeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetVoteResultByOneJudgeResponse}, {
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResultByOneJudgeResponse_Vote.base,}};

static void InitDefaultsLoginRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_LoginRequest_default_instance_;
    new (ptr) ::protoMsg::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::LoginRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginRequest}, {}};

static void InitDefaultsLoginResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_LoginResponse_default_instance_;
    new (ptr) ::protoMsg::LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::LoginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginResponse}, {}};

static void InitDefaultsVote_Plaer_score() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_Vote_Plaer_score_default_instance_;
    new (ptr) ::protoMsg::Vote_Plaer_score();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::Vote_Plaer_score::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vote_Plaer_score =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVote_Plaer_score}, {}};

static void InitDefaultsVote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_Vote_default_instance_;
    new (ptr) ::protoMsg::Vote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::Vote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVote}, {
      &protobuf_voteServer_5fproto_2eproto::scc_info_Vote_Plaer_score.base,}};

static void InitDefaultsVoteResponse_Plaerscore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_VoteResponse_Plaerscore_default_instance_;
    new (ptr) ::protoMsg::VoteResponse_Plaerscore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::VoteResponse_Plaerscore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VoteResponse_Plaerscore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVoteResponse_Plaerscore}, {}};

static void InitDefaultsVoteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protoMsg::_VoteResponse_default_instance_;
    new (ptr) ::protoMsg::VoteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protoMsg::VoteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VoteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVoteResponse}, {
      &protobuf_voteServer_5fproto_2eproto::scc_info_VoteResponse_Plaerscore.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateVote_Judge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateVote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateVoteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAllVotes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAllVotesResponse_Vote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAllVotesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVoteResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVoteResultByOneJudge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVoteResultByOneJudgeResponse_Vote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVoteResultByOneJudgeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vote_Plaer_score.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VoteResponse_Plaerscore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VoteResponse.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote_Judge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote_Judge, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote_Judge, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, votename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, dazhongweight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, zhuanyeweight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, judgechoose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, playerchoose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVote, deadline_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::CreateVoteResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotes, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotesResponse_Vote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotesResponse_Vote, votename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotesResponse_Vote, voteid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotesResponse_Vote, isvalid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetAllVotesResponse, votes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResult, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResult, voteid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudge, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudge, uname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudge, ustatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudgeResponse_Vote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudgeResponse_Vote, votename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudgeResponse_Vote, voteid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudgeResponse_Vote, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudgeResponse_Vote, isvoted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudgeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::GetVoteResultByOneJudgeResponse, votes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::LoginRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::LoginRequest, uname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::LoginRequest, upwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::LoginResponse, uname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::LoginResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote_Plaer_score, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote_Plaer_score, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote_Plaer_score, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote, uname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote, ustatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote, plaerpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::Vote, voteid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::VoteResponse_Plaerscore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::VoteResponse_Plaerscore, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::VoteResponse_Plaerscore, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::VoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protoMsg::VoteResponse, playerscores_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protoMsg::CreateVote_Judge)},
  { 7, -1, sizeof(::protoMsg::CreateVote)},
  { 19, -1, sizeof(::protoMsg::CreateVoteResponse)},
  { 25, -1, sizeof(::protoMsg::GetAllVotes)},
  { 31, -1, sizeof(::protoMsg::GetAllVotesResponse_Vote)},
  { 39, -1, sizeof(::protoMsg::GetAllVotesResponse)},
  { 45, -1, sizeof(::protoMsg::GetVoteResult)},
  { 52, -1, sizeof(::protoMsg::GetVoteResultByOneJudge)},
  { 60, -1, sizeof(::protoMsg::GetVoteResultByOneJudgeResponse_Vote)},
  { 69, -1, sizeof(::protoMsg::GetVoteResultByOneJudgeResponse)},
  { 75, -1, sizeof(::protoMsg::LoginRequest)},
  { 83, -1, sizeof(::protoMsg::LoginResponse)},
  { 90, -1, sizeof(::protoMsg::Vote_Plaer_score)},
  { 97, -1, sizeof(::protoMsg::Vote)},
  { 107, -1, sizeof(::protoMsg::VoteResponse_Plaerscore)},
  { 114, -1, sizeof(::protoMsg::VoteResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_CreateVote_Judge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_CreateVote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_CreateVoteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_GetAllVotes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_GetAllVotesResponse_Vote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_GetAllVotesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_GetVoteResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_GetVoteResultByOneJudge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_GetVoteResultByOneJudgeResponse_Vote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_GetVoteResultByOneJudgeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_Vote_Plaer_score_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_Vote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_VoteResponse_Plaerscore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protoMsg::_VoteResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "voteServer_proto.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026voteServer_proto.proto\022\010protoMsg\"\326\001\n\nC"
      "reateVote\022\014\n\004type\030\001 \001(\t\022\020\n\010voteName\030\002 \001("
      "\t\022\025\n\rdazhongWeight\030\003 \001(\t\022\025\n\rzhuanyeWeigh"
      "t\030\004 \001(\t\022/\n\013judgeChoose\030\005 \003(\0132\032.protoMsg."
      "CreateVote.Judge\022\024\n\014playerChoose\030\006 \003(\t\022\020"
      "\n\010deadline\030\007 \001(\t\032!\n\005Judge\022\014\n\004name\030\001 \001(\t\022"
      "\n\n\002ID\030\002 \001(\t\"$\n\022CreateVoteResponse\022\016\n\006res"
      "ult\030\001 \001(\t\"\033\n\013GetAllVotes\022\014\n\004type\030\001 \001(\t\"\203"
      "\001\n\023GetAllVotesResponse\0221\n\005votes\030\001 \003(\0132\"."
      "protoMsg.GetAllVotesResponse.Vote\0329\n\004Vot"
      "e\022\020\n\010voteName\030\001 \001(\t\022\016\n\006voteID\030\002 \001(\t\022\017\n\007i"
      "sValid\030\003 \001(\t\"-\n\rGetVoteResult\022\014\n\004type\030\001 "
      "\001(\t\022\016\n\006voteID\030\002 \001(\t\"G\n\027GetVoteResultByOn"
      "eJudge\022\014\n\004type\030\001 \001(\t\022\r\n\005uname\030\002 \001(\t\022\017\n\007u"
      "status\030\003 \001(\t\"\254\001\n\037GetVoteResultByOneJudge"
      "Response\022=\n\005votes\030\001 \003(\0132..protoMsg.GetVo"
      "teResultByOneJudgeResponse.Vote\032J\n\004Vote\022"
      "\020\n\010voteName\030\001 \001(\t\022\016\n\006voteID\030\002 \001(\t\022\017\n\007isV"
      "alid\030\003 \001(\t\022\017\n\007isVoted\030\004 \001(\t\"9\n\014LoginRequ"
      "est\022\014\n\004type\030\001 \001(\t\022\r\n\005uname\030\002 \001(\t\022\014\n\004upwd"
      "\030\003 \001(\t\"*\n\rLoginResponse\022\r\n\005uname\030\001 \001(\t\022\n"
      "\n\002id\030\002 \001(\t\"\241\001\n\004Vote\022\014\n\004type\030\001 \001(\t\022\r\n\005una"
      "me\030\002 \001(\t\022\017\n\007ustatus\030\003 \001(\t\022/\n\013plaerPoints"
      "\030\004 \003(\0132\032.protoMsg.Vote.Plaer_score\022\016\n\006vo"
      "teID\030\005 \001(\t\032*\n\013Plaer_score\022\014\n\004name\030\001 \001(\t\022"
      "\r\n\005score\030\002 \001(\t\"r\n\014VoteResponse\0227\n\014player"
      "Scores\030\001 \003(\0132!.protoMsg.VoteResponse.Pla"
      "erscore\032)\n\nPlaerscore\022\014\n\004name\030\001 \001(\t\022\r\n\005s"
      "core\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1138);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "voteServer_proto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_voteServer_5fproto_2eproto
namespace protoMsg {

// ===================================================================

void CreateVote_Judge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateVote_Judge::kNameFieldNumber;
const int CreateVote_Judge::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateVote_Judge::CreateVote_Judge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_CreateVote_Judge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.CreateVote.Judge)
}
CreateVote_Judge::CreateVote_Judge(const CreateVote_Judge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.CreateVote.Judge)
}

void CreateVote_Judge::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateVote_Judge::~CreateVote_Judge() {
  // @@protoc_insertion_point(destructor:protoMsg.CreateVote.Judge)
  SharedDtor();
}

void CreateVote_Judge::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateVote_Judge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateVote_Judge::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateVote_Judge& CreateVote_Judge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_CreateVote_Judge.base);
  return *internal_default_instance();
}


void CreateVote_Judge::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.CreateVote.Judge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateVote_Judge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.CreateVote.Judge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.Judge.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.Judge.ID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.CreateVote.Judge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.CreateVote.Judge)
  return false;
#undef DO_
}

void CreateVote_Judge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.CreateVote.Judge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.Judge.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.Judge.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.CreateVote.Judge)
}

::google::protobuf::uint8* CreateVote_Judge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.CreateVote.Judge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.Judge.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.Judge.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.CreateVote.Judge)
  return target;
}

size_t CreateVote_Judge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.CreateVote.Judge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string ID = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVote_Judge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.CreateVote.Judge)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVote_Judge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateVote_Judge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.CreateVote.Judge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.CreateVote.Judge)
    MergeFrom(*source);
  }
}

void CreateVote_Judge::MergeFrom(const CreateVote_Judge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.CreateVote.Judge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void CreateVote_Judge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.CreateVote.Judge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVote_Judge::CopyFrom(const CreateVote_Judge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.CreateVote.Judge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVote_Judge::IsInitialized() const {
  return true;
}

void CreateVote_Judge::Swap(CreateVote_Judge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateVote_Judge::InternalSwap(CreateVote_Judge* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateVote_Judge::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateVote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateVote::kTypeFieldNumber;
const int CreateVote::kVoteNameFieldNumber;
const int CreateVote::kDazhongWeightFieldNumber;
const int CreateVote::kZhuanyeWeightFieldNumber;
const int CreateVote::kJudgeChooseFieldNumber;
const int CreateVote::kPlayerChooseFieldNumber;
const int CreateVote::kDeadlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateVote::CreateVote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_CreateVote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.CreateVote)
}
CreateVote::CreateVote(const CreateVote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      judgechoose_(from.judgechoose_),
      playerchoose_(from.playerchoose_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  votename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.votename().size() > 0) {
    votename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votename_);
  }
  dazhongweight_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dazhongweight().size() > 0) {
    dazhongweight_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dazhongweight_);
  }
  zhuanyeweight_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zhuanyeweight().size() > 0) {
    zhuanyeweight_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zhuanyeweight_);
  }
  deadline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deadline().size() > 0) {
    deadline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deadline_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.CreateVote)
}

void CreateVote::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  votename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dazhongweight_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhuanyeweight_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deadline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateVote::~CreateVote() {
  // @@protoc_insertion_point(destructor:protoMsg.CreateVote)
  SharedDtor();
}

void CreateVote::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  votename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dazhongweight_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhuanyeweight_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deadline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateVote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateVote::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateVote& CreateVote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_CreateVote.base);
  return *internal_default_instance();
}


void CreateVote::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.CreateVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  judgechoose_.Clear();
  playerchoose_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  votename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dazhongweight_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhuanyeweight_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deadline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateVote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.CreateVote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string voteName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_votename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->votename().data(), static_cast<int>(this->votename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.voteName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dazhongWeight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dazhongweight()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dazhongweight().data(), static_cast<int>(this->dazhongweight().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.dazhongWeight"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zhuanyeWeight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zhuanyeweight()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zhuanyeweight().data(), static_cast<int>(this->zhuanyeweight().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.zhuanyeWeight"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protoMsg.CreateVote.Judge judgeChoose = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_judgechoose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string playerChoose = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_playerchoose()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerchoose(this->playerchoose_size() - 1).data(),
            static_cast<int>(this->playerchoose(this->playerchoose_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.playerChoose"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deadline = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deadline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deadline().data(), static_cast<int>(this->deadline().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVote.deadline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.CreateVote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.CreateVote)
  return false;
#undef DO_
}

void CreateVote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.CreateVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string voteName = 2;
  if (this->votename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->votename().data(), static_cast<int>(this->votename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.voteName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->votename(), output);
  }

  // string dazhongWeight = 3;
  if (this->dazhongweight().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dazhongweight().data(), static_cast<int>(this->dazhongweight().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.dazhongWeight");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dazhongweight(), output);
  }

  // string zhuanyeWeight = 4;
  if (this->zhuanyeweight().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zhuanyeweight().data(), static_cast<int>(this->zhuanyeweight().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.zhuanyeWeight");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->zhuanyeweight(), output);
  }

  // repeated .protoMsg.CreateVote.Judge judgeChoose = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->judgechoose_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->judgechoose(static_cast<int>(i)),
      output);
  }

  // repeated string playerChoose = 6;
  for (int i = 0, n = this->playerchoose_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerchoose(i).data(), static_cast<int>(this->playerchoose(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.playerChoose");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->playerchoose(i), output);
  }

  // string deadline = 7;
  if (this->deadline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deadline().data(), static_cast<int>(this->deadline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.deadline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->deadline(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.CreateVote)
}

::google::protobuf::uint8* CreateVote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.CreateVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string voteName = 2;
  if (this->votename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->votename().data(), static_cast<int>(this->votename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.voteName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->votename(), target);
  }

  // string dazhongWeight = 3;
  if (this->dazhongweight().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dazhongweight().data(), static_cast<int>(this->dazhongweight().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.dazhongWeight");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dazhongweight(), target);
  }

  // string zhuanyeWeight = 4;
  if (this->zhuanyeweight().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zhuanyeweight().data(), static_cast<int>(this->zhuanyeweight().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.zhuanyeWeight");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->zhuanyeweight(), target);
  }

  // repeated .protoMsg.CreateVote.Judge judgeChoose = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->judgechoose_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->judgechoose(static_cast<int>(i)), deterministic, target);
  }

  // repeated string playerChoose = 6;
  for (int i = 0, n = this->playerchoose_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerchoose(i).data(), static_cast<int>(this->playerchoose(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.playerChoose");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->playerchoose(i), target);
  }

  // string deadline = 7;
  if (this->deadline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deadline().data(), static_cast<int>(this->deadline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVote.deadline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->deadline(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.CreateVote)
  return target;
}

size_t CreateVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.CreateVote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protoMsg.CreateVote.Judge judgeChoose = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->judgechoose_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->judgechoose(static_cast<int>(i)));
    }
  }

  // repeated string playerChoose = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->playerchoose_size());
  for (int i = 0, n = this->playerchoose_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->playerchoose(i));
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string voteName = 2;
  if (this->votename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->votename());
  }

  // string dazhongWeight = 3;
  if (this->dazhongweight().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dazhongweight());
  }

  // string zhuanyeWeight = 4;
  if (this->zhuanyeweight().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zhuanyeweight());
  }

  // string deadline = 7;
  if (this->deadline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deadline());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.CreateVote)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateVote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.CreateVote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.CreateVote)
    MergeFrom(*source);
  }
}

void CreateVote::MergeFrom(const CreateVote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.CreateVote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  judgechoose_.MergeFrom(from.judgechoose_);
  playerchoose_.MergeFrom(from.playerchoose_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.votename().size() > 0) {

    votename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votename_);
  }
  if (from.dazhongweight().size() > 0) {

    dazhongweight_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dazhongweight_);
  }
  if (from.zhuanyeweight().size() > 0) {

    zhuanyeweight_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zhuanyeweight_);
  }
  if (from.deadline().size() > 0) {

    deadline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deadline_);
  }
}

void CreateVote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.CreateVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVote::CopyFrom(const CreateVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.CreateVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVote::IsInitialized() const {
  return true;
}

void CreateVote::Swap(CreateVote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateVote::InternalSwap(CreateVote* other) {
  using std::swap;
  CastToBase(&judgechoose_)->InternalSwap(CastToBase(&other->judgechoose_));
  playerchoose_.InternalSwap(CastToBase(&other->playerchoose_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  votename_.Swap(&other->votename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dazhongweight_.Swap(&other->dazhongweight_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zhuanyeweight_.Swap(&other->zhuanyeweight_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deadline_.Swap(&other->deadline_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateVote::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateVoteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateVoteResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateVoteResponse::CreateVoteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_CreateVoteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.CreateVoteResponse)
}
CreateVoteResponse::CreateVoteResponse(const CreateVoteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.CreateVoteResponse)
}

void CreateVoteResponse::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateVoteResponse::~CreateVoteResponse() {
  // @@protoc_insertion_point(destructor:protoMsg.CreateVoteResponse)
  SharedDtor();
}

void CreateVoteResponse::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateVoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateVoteResponse::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateVoteResponse& CreateVoteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_CreateVoteResponse.base);
  return *internal_default_instance();
}


void CreateVoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.CreateVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateVoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.CreateVoteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.CreateVoteResponse.result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.CreateVoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.CreateVoteResponse)
  return false;
#undef DO_
}

void CreateVoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.CreateVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVoteResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.CreateVoteResponse)
}

::google::protobuf::uint8* CreateVoteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.CreateVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.CreateVoteResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.CreateVoteResponse)
  return target;
}

size_t CreateVoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.CreateVoteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVoteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.CreateVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVoteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateVoteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.CreateVoteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.CreateVoteResponse)
    MergeFrom(*source);
  }
}

void CreateVoteResponse::MergeFrom(const CreateVoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.CreateVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void CreateVoteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.CreateVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVoteResponse::CopyFrom(const CreateVoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.CreateVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVoteResponse::IsInitialized() const {
  return true;
}

void CreateVoteResponse::Swap(CreateVoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateVoteResponse::InternalSwap(CreateVoteResponse* other) {
  using std::swap;
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateVoteResponse::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAllVotes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllVotes::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllVotes::GetAllVotes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetAllVotes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.GetAllVotes)
}
GetAllVotes::GetAllVotes(const GetAllVotes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.GetAllVotes)
}

void GetAllVotes::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAllVotes::~GetAllVotes() {
  // @@protoc_insertion_point(destructor:protoMsg.GetAllVotes)
  SharedDtor();
}

void GetAllVotes::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAllVotes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAllVotes::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllVotes& GetAllVotes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_GetAllVotes.base);
  return *internal_default_instance();
}


void GetAllVotes::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.GetAllVotes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetAllVotes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.GetAllVotes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetAllVotes.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.GetAllVotes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.GetAllVotes)
  return false;
#undef DO_
}

void GetAllVotes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.GetAllVotes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotes.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.GetAllVotes)
}

::google::protobuf::uint8* GetAllVotes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.GetAllVotes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotes.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.GetAllVotes)
  return target;
}

size_t GetAllVotes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.GetAllVotes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllVotes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.GetAllVotes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllVotes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllVotes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.GetAllVotes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.GetAllVotes)
    MergeFrom(*source);
  }
}

void GetAllVotes::MergeFrom(const GetAllVotes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.GetAllVotes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void GetAllVotes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.GetAllVotes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllVotes::CopyFrom(const GetAllVotes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.GetAllVotes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllVotes::IsInitialized() const {
  return true;
}

void GetAllVotes::Swap(GetAllVotes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllVotes::InternalSwap(GetAllVotes* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAllVotes::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAllVotesResponse_Vote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllVotesResponse_Vote::kVoteNameFieldNumber;
const int GetAllVotesResponse_Vote::kVoteIDFieldNumber;
const int GetAllVotesResponse_Vote::kIsValidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllVotesResponse_Vote::GetAllVotesResponse_Vote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetAllVotesResponse_Vote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.GetAllVotesResponse.Vote)
}
GetAllVotesResponse_Vote::GetAllVotesResponse_Vote(const GetAllVotesResponse_Vote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  votename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.votename().size() > 0) {
    votename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votename_);
  }
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.voteid().size() > 0) {
    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
  isvalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.isvalid().size() > 0) {
    isvalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isvalid_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.GetAllVotesResponse.Vote)
}

void GetAllVotesResponse_Vote::SharedCtor() {
  votename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAllVotesResponse_Vote::~GetAllVotesResponse_Vote() {
  // @@protoc_insertion_point(destructor:protoMsg.GetAllVotesResponse.Vote)
  SharedDtor();
}

void GetAllVotesResponse_Vote::SharedDtor() {
  votename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvalid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAllVotesResponse_Vote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAllVotesResponse_Vote::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllVotesResponse_Vote& GetAllVotesResponse_Vote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_GetAllVotesResponse_Vote.base);
  return *internal_default_instance();
}


void GetAllVotesResponse_Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.GetAllVotesResponse.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  votename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetAllVotesResponse_Vote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.GetAllVotesResponse.Vote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string voteName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_votename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->votename().data(), static_cast<int>(this->votename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetAllVotesResponse.Vote.voteName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string voteID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voteid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->voteid().data(), static_cast<int>(this->voteid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetAllVotesResponse.Vote.voteID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string isValid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isvalid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->isvalid().data(), static_cast<int>(this->isvalid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetAllVotesResponse.Vote.isValid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.GetAllVotesResponse.Vote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.GetAllVotesResponse.Vote)
  return false;
#undef DO_
}

void GetAllVotesResponse_Vote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.GetAllVotesResponse.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string voteName = 1;
  if (this->votename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->votename().data(), static_cast<int>(this->votename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotesResponse.Vote.voteName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->votename(), output);
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotesResponse.Vote.voteID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->voteid(), output);
  }

  // string isValid = 3;
  if (this->isvalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isvalid().data(), static_cast<int>(this->isvalid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotesResponse.Vote.isValid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->isvalid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.GetAllVotesResponse.Vote)
}

::google::protobuf::uint8* GetAllVotesResponse_Vote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.GetAllVotesResponse.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string voteName = 1;
  if (this->votename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->votename().data(), static_cast<int>(this->votename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotesResponse.Vote.voteName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->votename(), target);
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotesResponse.Vote.voteID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->voteid(), target);
  }

  // string isValid = 3;
  if (this->isvalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isvalid().data(), static_cast<int>(this->isvalid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetAllVotesResponse.Vote.isValid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->isvalid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.GetAllVotesResponse.Vote)
  return target;
}

size_t GetAllVotesResponse_Vote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.GetAllVotesResponse.Vote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string voteName = 1;
  if (this->votename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->votename());
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voteid());
  }

  // string isValid = 3;
  if (this->isvalid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->isvalid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllVotesResponse_Vote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.GetAllVotesResponse.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllVotesResponse_Vote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllVotesResponse_Vote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.GetAllVotesResponse.Vote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.GetAllVotesResponse.Vote)
    MergeFrom(*source);
  }
}

void GetAllVotesResponse_Vote::MergeFrom(const GetAllVotesResponse_Vote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.GetAllVotesResponse.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.votename().size() > 0) {

    votename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votename_);
  }
  if (from.voteid().size() > 0) {

    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
  if (from.isvalid().size() > 0) {

    isvalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isvalid_);
  }
}

void GetAllVotesResponse_Vote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.GetAllVotesResponse.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllVotesResponse_Vote::CopyFrom(const GetAllVotesResponse_Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.GetAllVotesResponse.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllVotesResponse_Vote::IsInitialized() const {
  return true;
}

void GetAllVotesResponse_Vote::Swap(GetAllVotesResponse_Vote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllVotesResponse_Vote::InternalSwap(GetAllVotesResponse_Vote* other) {
  using std::swap;
  votename_.Swap(&other->votename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  voteid_.Swap(&other->voteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  isvalid_.Swap(&other->isvalid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAllVotesResponse_Vote::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAllVotesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllVotesResponse::kVotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllVotesResponse::GetAllVotesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetAllVotesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.GetAllVotesResponse)
}
GetAllVotesResponse::GetAllVotesResponse(const GetAllVotesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      votes_(from.votes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protoMsg.GetAllVotesResponse)
}

void GetAllVotesResponse::SharedCtor() {
}

GetAllVotesResponse::~GetAllVotesResponse() {
  // @@protoc_insertion_point(destructor:protoMsg.GetAllVotesResponse)
  SharedDtor();
}

void GetAllVotesResponse::SharedDtor() {
}

void GetAllVotesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAllVotesResponse::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllVotesResponse& GetAllVotesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_GetAllVotesResponse.base);
  return *internal_default_instance();
}


void GetAllVotesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.GetAllVotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  votes_.Clear();
  _internal_metadata_.Clear();
}

bool GetAllVotesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.GetAllVotesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protoMsg.GetAllVotesResponse.Vote votes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_votes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.GetAllVotesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.GetAllVotesResponse)
  return false;
#undef DO_
}

void GetAllVotesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.GetAllVotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protoMsg.GetAllVotesResponse.Vote votes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->votes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.GetAllVotesResponse)
}

::google::protobuf::uint8* GetAllVotesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.GetAllVotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protoMsg.GetAllVotesResponse.Vote votes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->votes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.GetAllVotesResponse)
  return target;
}

size_t GetAllVotesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.GetAllVotesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protoMsg.GetAllVotesResponse.Vote votes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->votes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->votes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllVotesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.GetAllVotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllVotesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllVotesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.GetAllVotesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.GetAllVotesResponse)
    MergeFrom(*source);
  }
}

void GetAllVotesResponse::MergeFrom(const GetAllVotesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.GetAllVotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  votes_.MergeFrom(from.votes_);
}

void GetAllVotesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.GetAllVotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllVotesResponse::CopyFrom(const GetAllVotesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.GetAllVotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllVotesResponse::IsInitialized() const {
  return true;
}

void GetAllVotesResponse::Swap(GetAllVotesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllVotesResponse::InternalSwap(GetAllVotesResponse* other) {
  using std::swap;
  CastToBase(&votes_)->InternalSwap(CastToBase(&other->votes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAllVotesResponse::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVoteResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoteResult::kTypeFieldNumber;
const int GetVoteResult::kVoteIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoteResult::GetVoteResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.GetVoteResult)
}
GetVoteResult::GetVoteResult(const GetVoteResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.voteid().size() > 0) {
    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.GetVoteResult)
}

void GetVoteResult::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetVoteResult::~GetVoteResult() {
  // @@protoc_insertion_point(destructor:protoMsg.GetVoteResult)
  SharedDtor();
}

void GetVoteResult::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetVoteResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVoteResult::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoteResult& GetVoteResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResult.base);
  return *internal_default_instance();
}


void GetVoteResult::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.GetVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetVoteResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.GetVoteResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResult.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string voteID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voteid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->voteid().data(), static_cast<int>(this->voteid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResult.voteID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.GetVoteResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.GetVoteResult)
  return false;
#undef DO_
}

void GetVoteResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.GetVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResult.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResult.voteID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->voteid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.GetVoteResult)
}

::google::protobuf::uint8* GetVoteResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.GetVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResult.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResult.voteID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->voteid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.GetVoteResult)
  return target;
}

size_t GetVoteResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.GetVoteResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voteid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVoteResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.GetVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoteResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoteResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.GetVoteResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.GetVoteResult)
    MergeFrom(*source);
  }
}

void GetVoteResult::MergeFrom(const GetVoteResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.GetVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.voteid().size() > 0) {

    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
}

void GetVoteResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.GetVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoteResult::CopyFrom(const GetVoteResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.GetVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoteResult::IsInitialized() const {
  return true;
}

void GetVoteResult::Swap(GetVoteResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoteResult::InternalSwap(GetVoteResult* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  voteid_.Swap(&other->voteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVoteResult::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVoteResultByOneJudge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoteResultByOneJudge::kTypeFieldNumber;
const int GetVoteResultByOneJudge::kUnameFieldNumber;
const int GetVoteResultByOneJudge::kUstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoteResultByOneJudge::GetVoteResultByOneJudge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResultByOneJudge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.GetVoteResultByOneJudge)
}
GetVoteResultByOneJudge::GetVoteResultByOneJudge(const GetVoteResultByOneJudge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uname().size() > 0) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  ustatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ustatus().size() > 0) {
    ustatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ustatus_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.GetVoteResultByOneJudge)
}

void GetVoteResultByOneJudge::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ustatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetVoteResultByOneJudge::~GetVoteResultByOneJudge() {
  // @@protoc_insertion_point(destructor:protoMsg.GetVoteResultByOneJudge)
  SharedDtor();
}

void GetVoteResultByOneJudge::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ustatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetVoteResultByOneJudge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVoteResultByOneJudge::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoteResultByOneJudge& GetVoteResultByOneJudge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResultByOneJudge.base);
  return *internal_default_instance();
}


void GetVoteResultByOneJudge::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.GetVoteResultByOneJudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ustatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetVoteResultByOneJudge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.GetVoteResultByOneJudge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResultByOneJudge.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uname().data(), static_cast<int>(this->uname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResultByOneJudge.uname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ustatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ustatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ustatus().data(), static_cast<int>(this->ustatus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResultByOneJudge.ustatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.GetVoteResultByOneJudge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.GetVoteResultByOneJudge)
  return false;
#undef DO_
}

void GetVoteResultByOneJudge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.GetVoteResultByOneJudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudge.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudge.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uname(), output);
  }

  // string ustatus = 3;
  if (this->ustatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ustatus().data(), static_cast<int>(this->ustatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudge.ustatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ustatus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.GetVoteResultByOneJudge)
}

::google::protobuf::uint8* GetVoteResultByOneJudge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.GetVoteResultByOneJudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudge.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudge.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uname(), target);
  }

  // string ustatus = 3;
  if (this->ustatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ustatus().data(), static_cast<int>(this->ustatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudge.ustatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ustatus(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.GetVoteResultByOneJudge)
  return target;
}

size_t GetVoteResultByOneJudge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.GetVoteResultByOneJudge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  // string ustatus = 3;
  if (this->ustatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ustatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVoteResultByOneJudge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.GetVoteResultByOneJudge)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoteResultByOneJudge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoteResultByOneJudge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.GetVoteResultByOneJudge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.GetVoteResultByOneJudge)
    MergeFrom(*source);
  }
}

void GetVoteResultByOneJudge::MergeFrom(const GetVoteResultByOneJudge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.GetVoteResultByOneJudge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.uname().size() > 0) {

    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.ustatus().size() > 0) {

    ustatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ustatus_);
  }
}

void GetVoteResultByOneJudge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.GetVoteResultByOneJudge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoteResultByOneJudge::CopyFrom(const GetVoteResultByOneJudge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.GetVoteResultByOneJudge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoteResultByOneJudge::IsInitialized() const {
  return true;
}

void GetVoteResultByOneJudge::Swap(GetVoteResultByOneJudge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoteResultByOneJudge::InternalSwap(GetVoteResultByOneJudge* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uname_.Swap(&other->uname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ustatus_.Swap(&other->ustatus_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVoteResultByOneJudge::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVoteResultByOneJudgeResponse_Vote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoteResultByOneJudgeResponse_Vote::kVoteNameFieldNumber;
const int GetVoteResultByOneJudgeResponse_Vote::kVoteIDFieldNumber;
const int GetVoteResultByOneJudgeResponse_Vote::kIsValidFieldNumber;
const int GetVoteResultByOneJudgeResponse_Vote::kIsVotedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoteResultByOneJudgeResponse_Vote::GetVoteResultByOneJudgeResponse_Vote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResultByOneJudgeResponse_Vote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
}
GetVoteResultByOneJudgeResponse_Vote::GetVoteResultByOneJudgeResponse_Vote(const GetVoteResultByOneJudgeResponse_Vote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  votename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.votename().size() > 0) {
    votename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votename_);
  }
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.voteid().size() > 0) {
    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
  isvalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.isvalid().size() > 0) {
    isvalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isvalid_);
  }
  isvoted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.isvoted().size() > 0) {
    isvoted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isvoted_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
}

void GetVoteResultByOneJudgeResponse_Vote::SharedCtor() {
  votename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvoted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetVoteResultByOneJudgeResponse_Vote::~GetVoteResultByOneJudgeResponse_Vote() {
  // @@protoc_insertion_point(destructor:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  SharedDtor();
}

void GetVoteResultByOneJudgeResponse_Vote::SharedDtor() {
  votename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvalid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvoted_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetVoteResultByOneJudgeResponse_Vote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVoteResultByOneJudgeResponse_Vote::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoteResultByOneJudgeResponse_Vote& GetVoteResultByOneJudgeResponse_Vote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResultByOneJudgeResponse_Vote.base);
  return *internal_default_instance();
}


void GetVoteResultByOneJudgeResponse_Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  votename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isvoted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetVoteResultByOneJudgeResponse_Vote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string voteName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_votename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->votename().data(), static_cast<int>(this->votename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResultByOneJudgeResponse.Vote.voteName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string voteID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voteid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->voteid().data(), static_cast<int>(this->voteid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResultByOneJudgeResponse.Vote.voteID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string isValid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isvalid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->isvalid().data(), static_cast<int>(this->isvalid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResultByOneJudgeResponse.Vote.isValid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string isVoted = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isvoted()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->isvoted().data(), static_cast<int>(this->isvoted().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.GetVoteResultByOneJudgeResponse.Vote.isVoted"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  return false;
#undef DO_
}

void GetVoteResultByOneJudgeResponse_Vote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string voteName = 1;
  if (this->votename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->votename().data(), static_cast<int>(this->votename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.voteName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->votename(), output);
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.voteID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->voteid(), output);
  }

  // string isValid = 3;
  if (this->isvalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isvalid().data(), static_cast<int>(this->isvalid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.isValid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->isvalid(), output);
  }

  // string isVoted = 4;
  if (this->isvoted().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isvoted().data(), static_cast<int>(this->isvoted().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.isVoted");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->isvoted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
}

::google::protobuf::uint8* GetVoteResultByOneJudgeResponse_Vote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string voteName = 1;
  if (this->votename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->votename().data(), static_cast<int>(this->votename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.voteName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->votename(), target);
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.voteID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->voteid(), target);
  }

  // string isValid = 3;
  if (this->isvalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isvalid().data(), static_cast<int>(this->isvalid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.isValid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->isvalid(), target);
  }

  // string isVoted = 4;
  if (this->isvoted().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isvoted().data(), static_cast<int>(this->isvoted().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.GetVoteResultByOneJudgeResponse.Vote.isVoted");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->isvoted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  return target;
}

size_t GetVoteResultByOneJudgeResponse_Vote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string voteName = 1;
  if (this->votename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->votename());
  }

  // string voteID = 2;
  if (this->voteid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voteid());
  }

  // string isValid = 3;
  if (this->isvalid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->isvalid());
  }

  // string isVoted = 4;
  if (this->isvoted().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->isvoted());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVoteResultByOneJudgeResponse_Vote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoteResultByOneJudgeResponse_Vote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoteResultByOneJudgeResponse_Vote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
    MergeFrom(*source);
  }
}

void GetVoteResultByOneJudgeResponse_Vote::MergeFrom(const GetVoteResultByOneJudgeResponse_Vote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.votename().size() > 0) {

    votename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votename_);
  }
  if (from.voteid().size() > 0) {

    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
  if (from.isvalid().size() > 0) {

    isvalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isvalid_);
  }
  if (from.isvoted().size() > 0) {

    isvoted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isvoted_);
  }
}

void GetVoteResultByOneJudgeResponse_Vote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoteResultByOneJudgeResponse_Vote::CopyFrom(const GetVoteResultByOneJudgeResponse_Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.GetVoteResultByOneJudgeResponse.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoteResultByOneJudgeResponse_Vote::IsInitialized() const {
  return true;
}

void GetVoteResultByOneJudgeResponse_Vote::Swap(GetVoteResultByOneJudgeResponse_Vote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoteResultByOneJudgeResponse_Vote::InternalSwap(GetVoteResultByOneJudgeResponse_Vote* other) {
  using std::swap;
  votename_.Swap(&other->votename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  voteid_.Swap(&other->voteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  isvalid_.Swap(&other->isvalid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  isvoted_.Swap(&other->isvoted_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVoteResultByOneJudgeResponse_Vote::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVoteResultByOneJudgeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoteResultByOneJudgeResponse::kVotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoteResultByOneJudgeResponse::GetVoteResultByOneJudgeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResultByOneJudgeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.GetVoteResultByOneJudgeResponse)
}
GetVoteResultByOneJudgeResponse::GetVoteResultByOneJudgeResponse(const GetVoteResultByOneJudgeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      votes_(from.votes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protoMsg.GetVoteResultByOneJudgeResponse)
}

void GetVoteResultByOneJudgeResponse::SharedCtor() {
}

GetVoteResultByOneJudgeResponse::~GetVoteResultByOneJudgeResponse() {
  // @@protoc_insertion_point(destructor:protoMsg.GetVoteResultByOneJudgeResponse)
  SharedDtor();
}

void GetVoteResultByOneJudgeResponse::SharedDtor() {
}

void GetVoteResultByOneJudgeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVoteResultByOneJudgeResponse::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoteResultByOneJudgeResponse& GetVoteResultByOneJudgeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_GetVoteResultByOneJudgeResponse.base);
  return *internal_default_instance();
}


void GetVoteResultByOneJudgeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.GetVoteResultByOneJudgeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  votes_.Clear();
  _internal_metadata_.Clear();
}

bool GetVoteResultByOneJudgeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.GetVoteResultByOneJudgeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protoMsg.GetVoteResultByOneJudgeResponse.Vote votes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_votes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.GetVoteResultByOneJudgeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.GetVoteResultByOneJudgeResponse)
  return false;
#undef DO_
}

void GetVoteResultByOneJudgeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.GetVoteResultByOneJudgeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protoMsg.GetVoteResultByOneJudgeResponse.Vote votes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->votes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.GetVoteResultByOneJudgeResponse)
}

::google::protobuf::uint8* GetVoteResultByOneJudgeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.GetVoteResultByOneJudgeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protoMsg.GetVoteResultByOneJudgeResponse.Vote votes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->votes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.GetVoteResultByOneJudgeResponse)
  return target;
}

size_t GetVoteResultByOneJudgeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.GetVoteResultByOneJudgeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protoMsg.GetVoteResultByOneJudgeResponse.Vote votes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->votes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->votes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVoteResultByOneJudgeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.GetVoteResultByOneJudgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoteResultByOneJudgeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoteResultByOneJudgeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.GetVoteResultByOneJudgeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.GetVoteResultByOneJudgeResponse)
    MergeFrom(*source);
  }
}

void GetVoteResultByOneJudgeResponse::MergeFrom(const GetVoteResultByOneJudgeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.GetVoteResultByOneJudgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  votes_.MergeFrom(from.votes_);
}

void GetVoteResultByOneJudgeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.GetVoteResultByOneJudgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoteResultByOneJudgeResponse::CopyFrom(const GetVoteResultByOneJudgeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.GetVoteResultByOneJudgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoteResultByOneJudgeResponse::IsInitialized() const {
  return true;
}

void GetVoteResultByOneJudgeResponse::Swap(GetVoteResultByOneJudgeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoteResultByOneJudgeResponse::InternalSwap(GetVoteResultByOneJudgeResponse* other) {
  using std::swap;
  CastToBase(&votes_)->InternalSwap(CastToBase(&other->votes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVoteResultByOneJudgeResponse::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kTypeFieldNumber;
const int LoginRequest::kUnameFieldNumber;
const int LoginRequest::kUpwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_LoginRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uname().size() > 0) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  upwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.upwd().size() > 0) {
    upwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwd_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.LoginRequest)
}

void LoginRequest::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:protoMsg.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_LoginRequest.base);
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.LoginRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.LoginRequest.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uname().data(), static_cast<int>(this->uname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.LoginRequest.uname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string upwd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->upwd().data(), static_cast<int>(this->upwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.LoginRequest.upwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginRequest.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginRequest.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uname(), output);
  }

  // string upwd = 3;
  if (this->upwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upwd().data(), static_cast<int>(this->upwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginRequest.upwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->upwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginRequest.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginRequest.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uname(), target);
  }

  // string upwd = 3;
  if (this->upwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upwd().data(), static_cast<int>(this->upwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginRequest.upwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->upwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  // string upwd = 3;
  if (this->upwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.uname().size() > 0) {

    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.upwd().size() > 0) {

    upwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwd_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uname_.Swap(&other->uname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  upwd_.Swap(&other->upwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kUnameFieldNumber;
const int LoginResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_LoginResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uname().size() > 0) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.LoginResponse)
}

void LoginResponse::SharedCtor() {
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:protoMsg.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginResponse& LoginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_LoginResponse.base);
  return *internal_default_instance();
}


void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.LoginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uname().data(), static_cast<int>(this->uname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.LoginResponse.uname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.LoginResponse.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uname = 1;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginResponse.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uname(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginResponse.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uname = 1;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginResponse.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uname(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.LoginResponse.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.LoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uname = 1;
  if (this->uname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uname().size() > 0) {

    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  uname_.Swap(&other->uname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vote_Plaer_score::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vote_Plaer_score::kNameFieldNumber;
const int Vote_Plaer_score::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vote_Plaer_score::Vote_Plaer_score()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_Vote_Plaer_score.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.Vote.Plaer_score)
}
Vote_Plaer_score::Vote_Plaer_score(const Vote_Plaer_score& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  score_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.score().size() > 0) {
    score_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.score_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.Vote.Plaer_score)
}

void Vote_Plaer_score::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Vote_Plaer_score::~Vote_Plaer_score() {
  // @@protoc_insertion_point(destructor:protoMsg.Vote.Plaer_score)
  SharedDtor();
}

void Vote_Plaer_score::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vote_Plaer_score::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vote_Plaer_score::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vote_Plaer_score& Vote_Plaer_score::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_Vote_Plaer_score.base);
  return *internal_default_instance();
}


void Vote_Plaer_score::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.Vote.Plaer_score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Vote_Plaer_score::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.Vote.Plaer_score)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.Vote.Plaer_score.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_score()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->score().data(), static_cast<int>(this->score().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.Vote.Plaer_score.score"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.Vote.Plaer_score)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.Vote.Plaer_score)
  return false;
#undef DO_
}

void Vote_Plaer_score::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.Vote.Plaer_score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.Plaer_score.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string score = 2;
  if (this->score().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->score().data(), static_cast<int>(this->score().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.Plaer_score.score");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.Vote.Plaer_score)
}

::google::protobuf::uint8* Vote_Plaer_score::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.Vote.Plaer_score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.Plaer_score.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string score = 2;
  if (this->score().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->score().data(), static_cast<int>(this->score().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.Plaer_score.score");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.Vote.Plaer_score)
  return target;
}

size_t Vote_Plaer_score::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.Vote.Plaer_score)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string score = 2;
  if (this->score().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vote_Plaer_score::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.Vote.Plaer_score)
  GOOGLE_DCHECK_NE(&from, this);
  const Vote_Plaer_score* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vote_Plaer_score>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.Vote.Plaer_score)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.Vote.Plaer_score)
    MergeFrom(*source);
  }
}

void Vote_Plaer_score::MergeFrom(const Vote_Plaer_score& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.Vote.Plaer_score)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.score().size() > 0) {

    score_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.score_);
  }
}

void Vote_Plaer_score::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.Vote.Plaer_score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vote_Plaer_score::CopyFrom(const Vote_Plaer_score& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.Vote.Plaer_score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vote_Plaer_score::IsInitialized() const {
  return true;
}

void Vote_Plaer_score::Swap(Vote_Plaer_score* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vote_Plaer_score::InternalSwap(Vote_Plaer_score* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  score_.Swap(&other->score_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vote_Plaer_score::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vote::kTypeFieldNumber;
const int Vote::kUnameFieldNumber;
const int Vote::kUstatusFieldNumber;
const int Vote::kPlaerPointsFieldNumber;
const int Vote::kVoteIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vote::Vote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_Vote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.Vote)
}
Vote::Vote(const Vote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      plaerpoints_(from.plaerpoints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uname().size() > 0) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  ustatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ustatus().size() > 0) {
    ustatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ustatus_);
  }
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.voteid().size() > 0) {
    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.Vote)
}

void Vote::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ustatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Vote::~Vote() {
  // @@protoc_insertion_point(destructor:protoMsg.Vote)
  SharedDtor();
}

void Vote::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ustatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vote::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vote& Vote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_Vote.base);
  return *internal_default_instance();
}


void Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plaerpoints_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ustatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Vote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.Vote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.Vote.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uname().data(), static_cast<int>(this->uname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.Vote.uname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ustatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ustatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ustatus().data(), static_cast<int>(this->ustatus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.Vote.ustatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protoMsg.Vote.Plaer_score plaerPoints = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_plaerpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string voteID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voteid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->voteid().data(), static_cast<int>(this->voteid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.Vote.voteID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.Vote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.Vote)
  return false;
#undef DO_
}

void Vote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uname(), output);
  }

  // string ustatus = 3;
  if (this->ustatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ustatus().data(), static_cast<int>(this->ustatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.ustatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ustatus(), output);
  }

  // repeated .protoMsg.Vote.Plaer_score plaerPoints = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plaerpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->plaerpoints(static_cast<int>(i)),
      output);
  }

  // string voteID = 5;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.voteID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->voteid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.Vote)
}

::google::protobuf::uint8* Vote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uname(), target);
  }

  // string ustatus = 3;
  if (this->ustatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ustatus().data(), static_cast<int>(this->ustatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.ustatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ustatus(), target);
  }

  // repeated .protoMsg.Vote.Plaer_score plaerPoints = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plaerpoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->plaerpoints(static_cast<int>(i)), deterministic, target);
  }

  // string voteID = 5;
  if (this->voteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voteid().data(), static_cast<int>(this->voteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.Vote.voteID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->voteid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.Vote)
  return target;
}

size_t Vote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.Vote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protoMsg.Vote.Plaer_score plaerPoints = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->plaerpoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->plaerpoints(static_cast<int>(i)));
    }
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string uname = 2;
  if (this->uname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  // string ustatus = 3;
  if (this->ustatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ustatus());
  }

  // string voteID = 5;
  if (this->voteid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voteid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  const Vote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.Vote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.Vote)
    MergeFrom(*source);
  }
}

void Vote::MergeFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  plaerpoints_.MergeFrom(from.plaerpoints_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.uname().size() > 0) {

    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.ustatus().size() > 0) {

    ustatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ustatus_);
  }
  if (from.voteid().size() > 0) {

    voteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voteid_);
  }
}

void Vote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vote::CopyFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vote::IsInitialized() const {
  return true;
}

void Vote::Swap(Vote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vote::InternalSwap(Vote* other) {
  using std::swap;
  CastToBase(&plaerpoints_)->InternalSwap(CastToBase(&other->plaerpoints_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uname_.Swap(&other->uname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ustatus_.Swap(&other->ustatus_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  voteid_.Swap(&other->voteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vote::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoteResponse_Plaerscore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoteResponse_Plaerscore::kNameFieldNumber;
const int VoteResponse_Plaerscore::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoteResponse_Plaerscore::VoteResponse_Plaerscore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_VoteResponse_Plaerscore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.VoteResponse.Plaerscore)
}
VoteResponse_Plaerscore::VoteResponse_Plaerscore(const VoteResponse_Plaerscore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  score_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.score().size() > 0) {
    score_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.score_);
  }
  // @@protoc_insertion_point(copy_constructor:protoMsg.VoteResponse.Plaerscore)
}

void VoteResponse_Plaerscore::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VoteResponse_Plaerscore::~VoteResponse_Plaerscore() {
  // @@protoc_insertion_point(destructor:protoMsg.VoteResponse.Plaerscore)
  SharedDtor();
}

void VoteResponse_Plaerscore::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VoteResponse_Plaerscore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VoteResponse_Plaerscore::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoteResponse_Plaerscore& VoteResponse_Plaerscore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_VoteResponse_Plaerscore.base);
  return *internal_default_instance();
}


void VoteResponse_Plaerscore::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.VoteResponse.Plaerscore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VoteResponse_Plaerscore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.VoteResponse.Plaerscore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.VoteResponse.Plaerscore.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_score()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->score().data(), static_cast<int>(this->score().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protoMsg.VoteResponse.Plaerscore.score"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.VoteResponse.Plaerscore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.VoteResponse.Plaerscore)
  return false;
#undef DO_
}

void VoteResponse_Plaerscore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.VoteResponse.Plaerscore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.VoteResponse.Plaerscore.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string score = 2;
  if (this->score().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->score().data(), static_cast<int>(this->score().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.VoteResponse.Plaerscore.score");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.VoteResponse.Plaerscore)
}

::google::protobuf::uint8* VoteResponse_Plaerscore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.VoteResponse.Plaerscore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.VoteResponse.Plaerscore.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string score = 2;
  if (this->score().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->score().data(), static_cast<int>(this->score().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protoMsg.VoteResponse.Plaerscore.score");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.VoteResponse.Plaerscore)
  return target;
}

size_t VoteResponse_Plaerscore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.VoteResponse.Plaerscore)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string score = 2;
  if (this->score().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoteResponse_Plaerscore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.VoteResponse.Plaerscore)
  GOOGLE_DCHECK_NE(&from, this);
  const VoteResponse_Plaerscore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoteResponse_Plaerscore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.VoteResponse.Plaerscore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.VoteResponse.Plaerscore)
    MergeFrom(*source);
  }
}

void VoteResponse_Plaerscore::MergeFrom(const VoteResponse_Plaerscore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.VoteResponse.Plaerscore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.score().size() > 0) {

    score_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.score_);
  }
}

void VoteResponse_Plaerscore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.VoteResponse.Plaerscore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoteResponse_Plaerscore::CopyFrom(const VoteResponse_Plaerscore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.VoteResponse.Plaerscore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoteResponse_Plaerscore::IsInitialized() const {
  return true;
}

void VoteResponse_Plaerscore::Swap(VoteResponse_Plaerscore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoteResponse_Plaerscore::InternalSwap(VoteResponse_Plaerscore* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  score_.Swap(&other->score_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VoteResponse_Plaerscore::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoteResponse::kPlayerScoresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoteResponse::VoteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voteServer_5fproto_2eproto::scc_info_VoteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoMsg.VoteResponse)
}
VoteResponse::VoteResponse(const VoteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerscores_(from.playerscores_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protoMsg.VoteResponse)
}

void VoteResponse::SharedCtor() {
}

VoteResponse::~VoteResponse() {
  // @@protoc_insertion_point(destructor:protoMsg.VoteResponse)
  SharedDtor();
}

void VoteResponse::SharedDtor() {
}

void VoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VoteResponse::descriptor() {
  ::protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoteResponse& VoteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voteServer_5fproto_2eproto::scc_info_VoteResponse.base);
  return *internal_default_instance();
}


void VoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protoMsg.VoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerscores_.Clear();
  _internal_metadata_.Clear();
}

bool VoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoMsg.VoteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protoMsg.VoteResponse.Plaerscore playerScores = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_playerscores()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoMsg.VoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoMsg.VoteResponse)
  return false;
#undef DO_
}

void VoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoMsg.VoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protoMsg.VoteResponse.Plaerscore playerScores = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerscores_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->playerscores(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protoMsg.VoteResponse)
}

::google::protobuf::uint8* VoteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protoMsg.VoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protoMsg.VoteResponse.Plaerscore playerScores = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerscores_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->playerscores(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoMsg.VoteResponse)
  return target;
}

size_t VoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoMsg.VoteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protoMsg.VoteResponse.Plaerscore playerScores = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->playerscores_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->playerscores(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protoMsg.VoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VoteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protoMsg.VoteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protoMsg.VoteResponse)
    MergeFrom(*source);
  }
}

void VoteResponse::MergeFrom(const VoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protoMsg.VoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerscores_.MergeFrom(from.playerscores_);
}

void VoteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protoMsg.VoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoteResponse::CopyFrom(const VoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoMsg.VoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoteResponse::IsInitialized() const {
  return true;
}

void VoteResponse::Swap(VoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoteResponse::InternalSwap(VoteResponse* other) {
  using std::swap;
  CastToBase(&playerscores_)->InternalSwap(CastToBase(&other->playerscores_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VoteResponse::GetMetadata() const {
  protobuf_voteServer_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voteServer_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protoMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::CreateVote_Judge* Arena::CreateMaybeMessage< ::protoMsg::CreateVote_Judge >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::CreateVote_Judge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::CreateVote* Arena::CreateMaybeMessage< ::protoMsg::CreateVote >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::CreateVote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::CreateVoteResponse* Arena::CreateMaybeMessage< ::protoMsg::CreateVoteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::CreateVoteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::GetAllVotes* Arena::CreateMaybeMessage< ::protoMsg::GetAllVotes >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::GetAllVotes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::GetAllVotesResponse_Vote* Arena::CreateMaybeMessage< ::protoMsg::GetAllVotesResponse_Vote >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::GetAllVotesResponse_Vote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::GetAllVotesResponse* Arena::CreateMaybeMessage< ::protoMsg::GetAllVotesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::GetAllVotesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::GetVoteResult* Arena::CreateMaybeMessage< ::protoMsg::GetVoteResult >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::GetVoteResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::GetVoteResultByOneJudge* Arena::CreateMaybeMessage< ::protoMsg::GetVoteResultByOneJudge >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::GetVoteResultByOneJudge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::GetVoteResultByOneJudgeResponse_Vote* Arena::CreateMaybeMessage< ::protoMsg::GetVoteResultByOneJudgeResponse_Vote >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::GetVoteResultByOneJudgeResponse_Vote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::GetVoteResultByOneJudgeResponse* Arena::CreateMaybeMessage< ::protoMsg::GetVoteResultByOneJudgeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::GetVoteResultByOneJudgeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::LoginRequest* Arena::CreateMaybeMessage< ::protoMsg::LoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::LoginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::LoginResponse* Arena::CreateMaybeMessage< ::protoMsg::LoginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::LoginResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::Vote_Plaer_score* Arena::CreateMaybeMessage< ::protoMsg::Vote_Plaer_score >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::Vote_Plaer_score >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::Vote* Arena::CreateMaybeMessage< ::protoMsg::Vote >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::Vote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::VoteResponse_Plaerscore* Arena::CreateMaybeMessage< ::protoMsg::VoteResponse_Plaerscore >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::VoteResponse_Plaerscore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protoMsg::VoteResponse* Arena::CreateMaybeMessage< ::protoMsg::VoteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protoMsg::VoteResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
